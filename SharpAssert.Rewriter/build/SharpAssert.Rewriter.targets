<Project>

  <PropertyGroup>
    <EnableSharpLambdaRewrite Condition="'$(EnableSharpLambdaRewrite)' == ''">true</EnableSharpLambdaRewrite>
    <SharpAssertEmitRewriteInfo Condition="'$(SharpAssertEmitRewriteInfo)' == ''">false</SharpAssertEmitRewriteInfo>
  </PropertyGroup>

  <UsingTask 
    TaskName="SharpLambdaRewriteTask" 
    AssemblyFile="$(MSBuildThisFileDirectory)../tools/net9.0/SharpAssert.Rewriter.dll" />

  <Target Name="SharpLambdaRewrite" BeforeTargets="CoreCompile"
          Condition="'$(EnableSharpLambdaRewrite)'=='true'">
    
    <ItemGroup>
      <_SharpInput Include="@(Compile)" />
      <_SharpNonSourceFiles Include="@(Compile)" Condition="$([System.String]::Copy('%(Identity)').Contains('Microsoft.NET.Test.Sdk.Program.cs')) or $([System.String]::Copy('%(Identity)').EndsWith('.AssemblyInfo.cs')) or $([System.String]::Copy('%(Identity)').EndsWith('.AssemblyAttributes.cs')) or $([System.String]::Copy('%(Identity)').EndsWith('.GlobalUsings.g.cs'))" />
      <_SharpSourceFiles Include="@(Compile)" Exclude="@(_SharpNonSourceFiles)" />
    </ItemGroup>

    <Message Text="SharpAssert: Rewriting Sharp.Assert calls to lambda form" Importance="normal" 
             Condition="'$(SharpAssertEmitRewriteInfo)'=='true'" />
    
    <SharpLambdaRewriteTask
        Sources="@(_SharpInput)"
        ProjectDir="$(MSBuildProjectDirectory)"
        IntermediateDir="$(IntermediateOutputPath)"
        OutputDir="$(IntermediateOutputPath)SharpRewritten"
        LangVersion="$(LangVersion)"
        NullableContext="$(Nullable)" />

    <ItemGroup>
      <Compile Remove="@(_SharpSourceFiles)" />
      <Compile Include="$(IntermediateOutputPath)SharpRewritten\**\*.sharp.g.cs" />
    </ItemGroup>
    
    <Message Text="SharpAssert: Replaced @(_SharpInput->Count()) source files with rewritten versions" Importance="normal"
             Condition="'$(SharpAssertEmitRewriteInfo)'=='true'" />
    
  </Target>

</Project>