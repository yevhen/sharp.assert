<Project>

  <PropertyGroup>
    <EnableSharpLambdaRewrite Condition="'$(EnableSharpLambdaRewrite)' == ''">true</EnableSharpLambdaRewrite>
    <SharpAssertEmitRewriteInfo Condition="'$(SharpAssertEmitRewriteInfo)' == ''">false</SharpAssertEmitRewriteInfo>
    <SharpAssertRewriterPath Condition="'$(SharpAssertRewriterPath)' == ''">$(MSBuildThisFileDirectory)../tools/net9.0/SharpAssert.dll</SharpAssertRewriterPath>
  </PropertyGroup>

  <UsingTask 
    TaskName="SharpLambdaRewriteTask" 
    AssemblyFile="$(SharpAssertRewriterPath)" 
    Condition="'$(SharpAssertRewriterPath)' != ''" />

  <!-- Define source files for input/output tracking -->
  <ItemGroup>
    <_SharpInput Include="@(Compile)" />
    <_SharpNonSourceFiles Include="@(Compile)" Condition="$([System.String]::Copy('%(Identity)').Contains('Microsoft.NET.Test.Sdk.Program.cs')) or $([System.String]::Copy('%(Identity)').EndsWith('.AssemblyInfo.cs')) or $([System.String]::Copy('%(Identity)').EndsWith('.AssemblyAttributes.cs')) or $([System.String]::Copy('%(Identity)').EndsWith('.GlobalUsings.g.cs'))" />
    <_SharpSourceFiles Include="**/*.cs" Exclude="**/bin/**/*.cs;**/obj/**/*.cs;$(IntermediateOutputPath)/**/*.cs" />
  </ItemGroup>

  <Target Name="SharpLambdaRewrite" BeforeTargets="CoreCompile"
          Condition="'$(EnableSharpLambdaRewrite)'=='true' and '$(DesignTimeBuild)' != 'true' and '$(BuildingForLiveUnitTesting)' != 'true'"
          Inputs="@(_SharpSourceFiles);$(SharpAssertRewriterPath)"
          Outputs="@(_SharpSourceFiles->'$(IntermediateOutputPath)SharpRewritten\%(RecursiveDir)%(Filename)%(Extension).sharp.g.cs')">
    

    <Message Text="SharpAssert: Rewriting Sharp.Assert calls to lambda form" Importance="normal" 
             Condition="'$(SharpAssertEmitRewriteInfo)'=='true'" />
    
    <SharpLambdaRewriteTask
        Sources="@(_SharpInput)"
        ProjectDir="$(MSBuildProjectDirectory)"
        IntermediateDir="$(IntermediateOutputPath)"
        OutputDir="$(IntermediateOutputPath)SharpRewritten"
        LangVersion="$(LangVersion)">
      <Output TaskParameter="GeneratedFiles" ItemName="_SharpRewrittenFiles" />
      <Output TaskParameter="ProcessedSourceFiles" ItemName="_SharpProcessedSources" />
    </SharpLambdaRewriteTask>

    <ItemGroup>
      <!-- Only remove files that were actually rewritten -->
      <Compile Remove="@(_SharpProcessedSources)" />
      
      <!-- Include only rewritten files -->
      <Compile Include="@(_SharpRewrittenFiles)" />
    </ItemGroup>
    
    <Message Text="SharpAssert: Processed @(_SharpProcessedSources->Count()) of @(_SharpSourceFiles->Count()) source files, preserved @(_SharpUnprocessedSources->Count()) unmodified files" Importance="normal"
             Condition="'$(SharpAssertEmitRewriteInfo)'=='true'" />
    
  </Target>

  <!-- Diagnostic target for design-time builds -->
  <Target Name="SharpLambdaRewriteSkipped" BeforeTargets="CoreCompile"
          Condition="'$(EnableSharpLambdaRewrite)'=='true' and ('$(DesignTimeBuild)' == 'true' or '$(BuildingForLiveUnitTesting)' == 'true')">
    
    <Message Text="SharpAssert: Skipping rewriter during design-time build (preserving IDE experience)" Importance="normal"
             Condition="'$(SharpAssertEmitRewriteInfo)'=='true'" />
    
  </Target>

  <!-- Clean target to remove generated files -->
  <Target Name="SharpAssertClean" BeforeTargets="Clean">
    <PropertyGroup>
      <SharpRewrittenPath>$(IntermediateOutputPath)SharpRewritten</SharpRewrittenPath>
    </PropertyGroup>

    <Message Text="SharpAssert: Cleaning generated files from $(SharpRewrittenPath)"
             Importance="low"
             Condition="Exists('$(SharpRewrittenPath)')" />

    <RemoveDir Directories="$(SharpRewrittenPath)"
               Condition="Exists('$(SharpRewrittenPath)')" />

    <ItemGroup>
      <FileWrites Include="$(SharpRewrittenPath)/**/*" />
    </ItemGroup>
  </Target>

</Project>